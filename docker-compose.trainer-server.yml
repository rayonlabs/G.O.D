# Deploy this on your trainer server(s)
version: '3.8'

services:
  # Vector log shipper - collects and ships logs to remote Loki
  vector-log-shipper:
    container_name: god-vector-log-shipper
    image: timberio/vector:latest-alpine
    command: ["--config", "/etc/vector/vector.toml"]
    restart: always
    environment:
      LOKI_ENDPOINT: ${LOKI_ENDPOINT:-http://94.156.8.230:3101}
      LOKI_USERNAME: ${LOKI_USERNAME:-trainer}
      LOKI_PASSWORD: ${LOKI_PASSWORD:-trainerlogs123}
      VECTOR_LOG: ${VECTOR_LOG_LEVEL:-info}
    volumes:
      - ./config/vector/vector.toml:/etc/vector/vector.toml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - vector-data:/var/lib/vector
    ports:
      - "8686:8686"   # Vector API
      - "9090:9090"   # Prometheus metrics exporter
      - "8688:8688"   # FastAPI logs endpoint
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
    networks:
      - trainer-network
    healthcheck:
      test: ["CMD", "vector", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Local Prometheus node exporter for trainer metrics
  node-exporter:
    container_name: god-node-exporter
    image: prom/node-exporter:latest
    restart: always
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)'
    volumes:
      - /:/host:ro,rslave
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    networks:
      - trainer-network

networks:
  trainer-network:
    driver: bridge

volumes:
  vector-data:
